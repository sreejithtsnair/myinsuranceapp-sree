pipeline {
    agent any
    
    
    stages {
        stage('Checkout') {
            steps {
                git branch: 'deploy',url: 'https://github.com/sreejithtsnair/myinsuranceapp-sree.git'
	        }
        }        
        stage('Requirements') {
            steps {
                echo 'Installing dependencies...'
                sh 'pip3 install -r requirements.txt'
                sh 'python3 project/init/init_db.py'
            }
        }
        stage('Unit/Integration tests') {
            steps {
                echo 'Unit/Integration...'
                sh 'python3 -m unittest discover -s tests/unit -v'
            }
        }        
        stage('Acceptance tests') {
            steps {
                echo 'Acceptance..'
                sh 'python3 -m unittest discover -s tests/acceptance-flask -v'
            }
        }     
        stage('Create image') {
            steps {
                echo 'creating image...'
                //sh 'docker build -t myinsuranceappsree:v8 -f dockerfile .'
                sh 'docker build -t hackathonimages.azurecr.io/myinsuranceappsree:v8 -f dockerfile .'
            }
        } 

        stage('Publish image') {
            steps {
                echo 'pushing image..'
                //withDockerRegistry([ credentialsId: "docker-hub-credentials", url: "" ]) {
                //sh 'docker push sreejithtsnair/myinsuranceappsree:v8'
                //}
                withDockerRegistry([ credentialsId: "acr-credentials-hackathon", url: "https://hackathonimages.azurecr.io" ]) {
                sh 'docker push hackathonimages.azurecr.io/myinsuranceappsree:v8'
                }
            }
        }
        stage('Apply Kubernetes ') {
            steps {
                echo 'Apply Kubernetes..'
                withKubeConfig([credentialsId: 'k8-credentials',serverUrl:'https://civil-snail-k8s-ad0f7e38.hcp.eastasia.azmk8s.io']) {
                sh 'kubectl apply -f kubernetes/myinsuranceappsree-azure-deployment.yaml'
                sh 'kubectl apply -f kubernetes/myinsuranceappsree-azure-services.yaml'
                sh 'kubectl port-forward service/myinsuranceappsree-service 5050:5000 &'
                sleep 5 //time to complete port forwarding
                }
            }
        }
     
        stage('External acceptance tests') {
            steps{
                echo 'External acceptance tests...'
                sh 'python3 -m unittest discover -s tests/acceptance-request -v'
            }
        }
    }
    post {
        always {
            echo 'post do this always...'
        }
        success{
            echo 'post do this when success...'
        }
        failure {
            echo 'post do this when failure...'
        }
        cleanup{
            echo 'post do this when cleanup...'
            sh 'pkill -f "port-forward"'
            deleteDir()
        }
    }
}